[[sample_chapter_unique_id]]
== Sample Chapter

Chapter text begins here. Replace any of this placeholder text with your opus. The following portion outlines heading levels and section structure.

=== This Is a Top-Level Heading (A-Head)

Within a chapter, the first and highest heading level uses three equals signs.

==== This Is a Second-Level Heading (B-Head)

The second-level heading uses four equals signs. This heading level should only follow a top-level heading (A-head).

===== This Is a Third-Level Heading (C-Head)

The third-level heading uses five equals signs. This heading level should only follow a second-level heading (B-head).


=== Atlas User Docs and Examples

Here are the https://docs.atlas.oreilly.com[Atlas user docs]. Here is the section on https://docs.atlas.oreilly.com/writing_in_asciidoc.html[writing in AsciiDoc]. 

Here are a few examples of commonly used elements. 

.This is a Tip
[TIP]
====
This element signifies a tip or suggestion.
====

.This Is a Note
[NOTE]
====
Many people use notes to qualify a statement they made in the preceding paragraphs, or to warn their readers about pitfalls they might run into.
====

[WARNING]
====
This is a warning, used to alert readers to something important or encourage caution. Headings are optional for admonitions like notes and warnings.
====

Here is an informal code listing:

[source,python]
----
print('hello world')
----

And this is a formal listing, or example:

[[example_code_block]]
.Hello World in Python
====
[source,python]
----
print("Hello World")
# Formal listings have titles that will be numbered in output.
----
====

For either type of listing, you have the option of specifying the code language displayed; see the Code sub-section of the https://docs.atlas.oreilly.com/writing_in_asciidoc.html[Writing in AsciiDoc section] of the Atlas user docs for more details.

You can also specify inline text as code: +print ("Hello World")+.

Now, let's take a look at a figure with a caption:

.Figures like this will be automatically numbered in output.
image::images/tarsier.png["Drawing of Tarsiers"]

Here is a blockquote with an author attribution:

[quote, Lewis Carroll]
____
Alice was beginning to get very tired of sitting by her sister on the bank, and of having nothing to do: once or twice she had peeped into the book her sister was reading, but it had no pictures or conversations in it, 'and what is the use of a book,' thought Alice 'without pictures or conversation?'
____

There are three types of lists available. Numbered (ordered) lists are often used to describe steps in a process:

. Parse the request.
. Choose a handler function.
. Run the handler function.

Bulleted (unordered) lists are good for describing a set of requirements:

* HTML source
* CSS stylesheets
* JavaScript code

Definition/variable lists serve as glossaries of terminology:

selectSource::
  Returns a Source containing all the IDs and values from the database. This allows you to write streaming code.
selectList::
  Returns a list containing all the IDs and values from the database. All records will be loaded into memory.
selectFirst::
  Takes just the first ID and value from the database, if available.
selectKeys::
  Returns only the keys, without the values, as a +Source+.

.Sidebar Title
****
Here's a sidebar. Sidebars are great for setting aside a section of text that is related to the surrounding content but that doesn't necessarily fit into the main flow.
****

Finally, here's a sample table:

[[example_table]]
.Features supported by Hadoop release series
[options="header"]
|=======
|Feature|1.x|0.22|2.x
|Secure authentication|Yes|No|Yes
|Old configuration names|Yes|Deprecated|Deprecated
|New configuration names|No|Yes|Yes
|Old MapReduce API|Yes|Yes|Yes
|New MapReduce API|Yes (with some missing libraries)|Yes|Yes
|=======

To insert a cross-reference, first add a block ID for the element to which you're referring. The block ID is a unique identifier enclosed in double square brackets. Place it on a single line above the block element (figure, table, section, etc.).

Here's a cross-reference to <<example_code_block>>. Here's one to <<example_table>>. Finally, here's one to <<sample_chapter_unique_id>>.

For the book to be valid, ids must be unique across the entire book, have no spaces, and not start with a number.

O'Reilly house style calls for every formal figure, formal table, and formal code example to be preceded by a specific in-text reference. Formal figures and formal tables are created when you add captions to these elements.

To include hyperlinks to external sources, add the full URL followed by the anchor text enclosed in single square brackets. This, for example, is a link to the https://www.oreilly.com/[O'Reilly home page]. The bracketed text will become a clickable link in web versions. In print versions, it will appear in the text, followed by the actual URL in parentheses.

=== Creating a Book Build in Atlas 
A helpful feature of Atlas is to create a book build in real time. This build shows the interior design of the book in PDF format, which allows you to see how elements will render on the print page. 

First, go to the Dashboard tab of your book project. Then, look to the right panel, click the "PDF" box, and hit "Build". Atlas will take a moment to generate the pages. A "Download" button will appear - click this, and a PDF will open in your web browser. This PDF may then be saved locally. 

[TIP]
====
If the Build button on the configure tab is grayed out, simply refresh the browser. The Build button should then become active.
====

==== Adding a Chapter to the Book Build 
In order to add a new chapter to your book in Atlas, you'll need to make an adjustment to the Configure tab in Atlas. 

. Move to the Configure tab in the book project in Atlas. 
. Scroll to the middle section of the page under "Files." Find the chapter you'd like to add and click the + symbol.   
. This will move the chapter to the "Build Contents" section on the right side of the page. 
.  Use the three stacked lines to reorder the chapters as desired. 
. Once your contents list looks correct, scroll down the page to click "Save Settings." 
.  Go back to the Dashboard and run a new book build as discussed in the previous section to verify your changes.

The generated PDF should now include the new chapter you just added, and the Table of Contents will reflect the new addition automatically. 


[TIP]
====
You can also update the build contents by editing the "files" array in the atlas.json file in the repository. Changes to the build contents made using the Configure tab will be reflected in the atlas.json file, and vice versa.
====

